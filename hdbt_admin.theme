<?php

/**
 * @file
 * Contains HDBT Admin theme.
 */

use Drupal\Core\Language\LanguageInterface;

/**
 * Implements hook_preprocess().
 */
function hdbt_admin_preprocess(&$variables) {
  $language = Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT);
  $variables['current_langcode'] = $language->getId();
  $variables['current_language'] = $language->getName();
}

/**
 * Implements hook_preprocess_input().
 */
function hdbt_admin_preprocess_input(&$variables) {

  // Set icons path for site settings form.
  if (
    array_key_exists('#parents', $variables['element']) &&
    is_array($variables['element']['#parents']) &&
    in_array('default_icon', $variables['element']['#parents'])
  ) {
    $variables['icons_path'] = '/' . drupal_get_path('theme', 'hdbt') . '/dist/icons/sprite.svg';
  }

  if ($variables['element']['#type'] !== 'submit') {
    return;
  }

  if (strpos($variables['element']['#name'], 'field_hero') !== FALSE) {
    if (array_key_exists('#paragraphs_mode', $variables['element'])) {
      $variables['#attached']['library'][] = 'hdbt_admin/hero-toggle';
      $variables['hdbt_selector'] = 'field-hero-action--' . $variables['element']['#paragraphs_mode'];
    }
    elseif ($variables['element']['#name'] === 'field_hero_hero_add_more') {
      $variables['#attached']['library'][] = 'hdbt_admin/hero-toggle';
      $variables['hdbt_selector'] = 'field-hero-action--add';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_admin_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (
    array_key_exists('#parents', $variables['element']) &&
    is_array($variables['element']['#parents']) &&
    $variables['theme_hook_original'] == 'form_element'
  ) {
    _hdbt_admin_form_template_suggestions($suggestions, $variables);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_admin_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  if (
    array_key_exists('#parents', $variables['element']) &&
    is_array($variables['element']['#parents']) &&
    $variables['theme_hook_original'] == 'input__radio'
  ) {
    _hdbt_admin_form_template_suggestions($suggestions, $variables);
  }
}

/**
 * Helper function for applying template suggestions.
 *
 * @param array $suggestions
 *   Existing suggestions.
 * @param array $variables
 *   Variables array.
 */
function _hdbt_admin_form_template_suggestions(array &$suggestions, array &$variables) {
  if (in_array('theme_color', $variables['element']['#parents'], TRUE)) {
    $suggestions[] = $variables['theme_hook_original'] . '__theme_color';
  }
  if (in_array('default_icon', $variables['element']['#parents'], TRUE)) {
    $suggestions[] = $variables['theme_hook_original'] . '__default_icon';
  }
  if (in_array('koro', $variables['element']['#parents'], TRUE)) {
    $suggestions[] = $variables['theme_hook_original'] . '__koro';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_admin_preprocess_table(&$variables) {
  // Add table field ID as a class as well. Remove the possible temp value from
  // the ID before adding it as a class.
  if (
    array_key_exists('id', $variables['attributes']) &&
    array_key_exists('class', $variables['attributes']) &&
    is_array($variables['attributes']['class'])
  ) {
    $class = explode('--', $variables['attributes']['id']);
    $variables['attributes']['class'][] = reset($class);
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Alter meta information field visibility by moving the fiels in to
 * Meta information accordion.
 */
function hdbt_admin_form_node_form_alter(&$form, &$form_state, $form_id) {
  $meta_fields = [
    'field_liftup_image' => 1,
    'field_metatags' => 2,
    'simple_sitemap' => 3,
  ];

  // Create a new field group for meta information,
  // if any of the meta data fields are available.
  foreach ($meta_fields as $field => $weight) {
    if (isset($form[$field])) {
      if (!array_key_exists('admin_metainformation', $form)) {
        $form['admin_metainformation'] = [
          '#title' => t('Meta information'),
          '#group' => 'advanced',
          '#weight' => -10,
          '#access' => TRUE,
          '#type' => 'details',
          '#open' => TRUE,
        ];
      }

      $form[$field]['#group'] = 'admin_metainformation';
      $form[$field]['#weight'] = $weight;
    }
  }
}
