<?php

/**
 * @file
 * Contains install functions for HDBT Admin editorial.
 */

use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Symfony\Component\Yaml\Yaml;

/**
 * Install 'color palette' field to node entity.
 */
function hdbt_admin_editorial_update_9001() {

  // Field to be installed and entity types.
  $field = 'color_palette';
  $entity_type = 'node';

  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $field_definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions($entity_type, $entity_type);
  if (!empty($field_definitions[$field]) && $field_definitions[$field] instanceof FieldStorageDefinitionInterface) {
    $entity_definition_update_manager->installFieldStorageDefinition($field, $entity_type,'hdbt_admin_editorial', $field_definitions[$field]);
  }
}

/**
 * Install 'color palette' field to node entity, if it is missing.
 */
function hdbt_admin_editorial_update_9002() {

  // Field to be installed and entity types.
  $field = 'color_palette';
  $entity_type = 'node';

  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $field_definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions($entity_type, $entity_type);

  // Install color palette field, if color palette field has not
  // been installed to current entity.
  if (
    !empty($field_definitions[$field]) &&
    $field_definitions[$field] instanceof FieldStorageDefinitionInterface &&
    empty($entity_definition_update_manager->getFieldStorageDefinition($field, $entity_type))
  ) {
    $entity_definition_update_manager->installFieldStorageDefinition($field, $entity_type, 'hdbt_admin_editorial', $field_definitions[$field]);
  }
}

/**
 * Manually update HDBT Admin blocks to support Gin region format.
 */
function hdbt_admin_editorial_update_9003() {
  $theme_handler = Drupal::service('theme_handler');
  $config_factory = \Drupal::configFactory();
  $config_location = dirname(__FILE__) . '../../config/install/';

  // Install configurations if hdbt_admin theme exists.
  if ($theme_handler->themeExists('hdbt_admin')) {
    $hdbt_admin_page_title = $config_factory->getEditable('block.block.hdbt_admin_page_title');
    $hdbt_admin_page_title_data = $hdbt_admin_page_title->getRawData();
    if (!empty($hdbt_admin_page_title_data)) {
      $hdbt_admin_page_title_data['region'] = 'header';
      $hdbt_admin_page_title_data['weight'] = -7;
      $hdbt_admin_page_title->setData($hdbt_admin_page_title_data)->save(TRUE);
    }

    $hdbt_admin_branding = $config_factory->getEditable('block.block.hdbt_admin_branding');
    $hdbt_admin_branding_data = $hdbt_admin_branding->getRawData();
    if (!empty($hdbt_admin_branding_data)) {
      $hdbt_admin_branding_data['region'] = 'breadcrumb';
      $hdbt_admin_branding_data['weight'] = -5;
      $hdbt_admin_branding->setData($hdbt_admin_branding_data)->save(TRUE);
    }

    $hdbt_admin_breadcrumbs = $config_factory->getEditable('block.block.hdbt_admin_breadcrumbs');
    $hdbt_admin_breadcrumbs_data = $hdbt_admin_breadcrumbs->getRawData();
    if (!empty($hdbt_admin_breadcrumbs_data)) {
      $hdbt_admin_breadcrumbs_data['region'] = 'breadcrumb';
      $hdbt_admin_breadcrumbs_data['weight'] = -4;
      $hdbt_admin_breadcrumbs->setData($hdbt_admin_breadcrumbs_data)->save(TRUE);
    }

    $configurations = [
      'block.block.hdbt_admin_primary_local_tasks',
      'block.block.hdbt_admin_secondary_local_tasks',
      'block.block.hdbt_admin_content'
    ];

    foreach ($configurations as $config_name) {
      $filepath = "{$config_location}{$config_name}.yml";
      if (file_exists($filepath)) {
        $data = Yaml::parse(file_get_contents($filepath));
        if (is_array($data)) {
          $config_factory->getEditable($config_name)->setData($data)->save(TRUE);
        }
      }
    }
  }
}
