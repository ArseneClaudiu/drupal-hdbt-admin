{#
/**
 * To actually show any data from a custom plugin, you *MUST* override this template
 * with a template called 'debug-item--{{ id }}.html.twig'.
 *
 * For example: debug-item--composer.html.twig, where 'composer' is your plugin's ID.
 *
 * You can then loop your data with something like this:
 * {% for item in data.packages %}
 *    {{ item.name }}
 *    {{ item.version }}
 * {% endfor %}
 *
 *  Available variables:
 *  - id: The ID of your plugin
 *  - label The label of your plugin
 *  - data:  An array of data returned by your plugin's collect() method.
 */
#}
{{ attach_library('hdbt_admin/debug-item-composer') }}

{{ id }} {{ label }}

<table style="width:auto;">
  <thead>
    <tr>
      <th>Package</th>
      <th>Version</th>
      <th>Updated</th>
      <th>Timestamp</th>
      <th>Releases</th>
      <th>Latest</th>
    </tr>
  </thead>
  <tbody>
    {% for package in data.packages %}
      <tr>
        <th>
          {{ package.name }}
        </th>
        <td>
          {{ package.version }}
        </td>
        <td data-since="{{ package.time }}">Loading..</td>
        <td>
          {{ package.time }}
        </td>
        <td>
          {% set link_url = package.source.url|replace({'.git':''}) %}
          {% set link_title = link_url|replace({'https://github.com/City-of-Helsinki/':''}) %}
          {% if link_url %}
            {{ link(link_title, link_url ~ '/releases') }}
          {% endif %}
        </td>
        <td data-package="{{ package.name }}" data-version="{{ package.version }}"></td>
      </tr>
    {% endfor %}
  </tbody>
</table>
